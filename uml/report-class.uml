@startuml
scale 1
page 1x1
title
        拍抢干业务实现梳理,知识点分享
        创建时间: <2019-11-04 16:39>
        endtitle
        left header
                梳理任务
        endheader
        'package，node，folder，frame，cloud，database'
        folder "上报管理" as reportM{
                class "ReportManagerController" as reportmag {
                        --属性组 --
                        UITableView *tableView;
                        NSMutableArray<ReportSectionModel *>  *dataArray; 
                        __ 定制section header方法__
                        -(UIView *)createHeadView:(NSString *)text;
                        -(CGFloat)tableView:heightForHeaderInSection:
                        -(UIView *)tableView:viewForHeaderInSection:
                }
                note bottom of reportmag
                        任务统计页面，跳转到具体的任务中
                        包括：已查，待查，超期未查，已结案 
                end note
                

        }
        'package，node，folder，frame，cloud，database'
        folder "任务列表" as tasklist{
                class "ReportTaskListController" as baselist {
                        --属性组 --
                        +TaskFlagType flag;
                        +UITableView *tableView;
                        +NSArray<ReportTaskModel *> *dataArray;
                        __ 函数组__
                        -(void)customBarButton;
                }
                
                
                class "ReportTaskListController" as taskmger {
                        --属性组 --

                        __ 函数组__
                }
                enum "TaskFlagType" as tasktype1 {
                        Task_TODO,
                        Task_Doing,
                        Task_Done,
                        Task_TimeOut,
                        Task_Invalid,
                }               
                note top of baselist
                        状态列表 
                        任务列表的基础类
                        任务：
                        初始化tableview，定制tableView样式和基础代理
                        声明数据数组
                        抽象话自定义Navbar方法
                end note
                note bottom of tasktype1
                        作用：上报详情的几种情况，待检查，可领取，已检查，无效上报，超期未查，已结案 
                end note

                baselist ..> tasktype1:依赖<
                baselist <|-- taskmger:继承<
                reportmag o--> baselist:聚合<
        }
        
        'package，node，folder，frame，cloud，database'
        folder "详情模块" as detailM{
                class "ReportedDetailController" as detail {
                        --属性组 --
                        /// 上报记录id
                        NSString *reportId;
                        /// view数据model
                        ReportDoingModel *reportModel;
                        /// 分割线
                        UIView *line;
                        /// 根视图容器
                        UIScrollView *scrollView;
                        /// 底部约束:为动态显示上传按钮提供空间高度
                        MASConstraint *scrollView_mas_Bottom;
                        __ 函数组__
                        -(void)installView;
                        -(void)loadData;
                        -(void)reloadDetailViewData;
                        -(void)loadDoingView{}; 
                }
                
                class "ReportedDoingController" as Doing {
                        --属性组 --
                        /// 是否为管理员
                        BOOL isAdmin;
                        /// 任务类型
                        TaskFlagType flag;
                        __ 函数组__
                        -(void)loadDoingView;
                        -(void)reloadThreeBtnView;
                        //无效上报/领取任务/检查结果上传
                        -(void)installThreeBtnView;
                        --按钮事件--
                        -(void)commitAction;
                        -(void)editNoteAction;
                        -(void)closereportAction;
                        -(void)todoAction;
                }

                class "ClientReportDetailController" as clientDetail {
                        --属性组 --
                        +NSString *reportId;
                        __ 函数组__
                        -(UIView *)infoView;
                        -(UIView *)detailView;
                }
                enum "TaskFlagType" as tasktype {
                        Task_TODO,
                        Task_Doing,
                        Task_Done,
                        Task_TimeOut,
                        Task_Invalid,
                } 
                enum "StoreTypeFlag" as storetype {
                        SType_CanDo,
                        SType_CantDo,
                        SType_Completed,
                        
                }


                note top of detail
                        通过reportId,拉去详情的数据,并展示任务详情UI 
                end note
                note bottom of tasktype
                        作用：上报详情的几种情况，待检查，可领取，已检查，无效上报，超期未查，已结案 
                end note

                note bottom of storetype
                        作用：多业态权限类型，可待查，不能检查，已完成
                        对应状态会呈现出不同的UI样式 
                end note

                Doing ..> tasktype:依赖<
                 
                
                detail <|-- Doing:继承<
                baselist o--> detail:聚合<
                Doing ..> storetype:依赖<
        }





        
        @enduml
